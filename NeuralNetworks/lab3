import torch
import numpy as np
import matplotlib.pyplot as plt

def show_contours(objective,
                  x_lims=[4.0, 10.0], 
                  y_lims=[0.75, 2.0],
                  x_ticks=10,
                  y_ticks=10):
    x_step = (x_lims[1] - x_lims[0]) / x_ticks
    y_step = (y_lims[1] - y_lims[0]) / y_ticks
    X, Y = np.mgrid[x_lims[0]:x_lims[1]:x_step, y_lims[0]:y_lims[1]:y_step]
    res = []
    for x_index in range(X.shape[0]):
        res.append([])
        for y_index in range(X.shape[1]):
            x_val = X[x_index, y_index]
            y_val = Y[x_index, y_index]
            res[-1].append(objective(np.array([[x_val, y_val]]).T))
    res = np.array(res)
    plt.figure(figsize=(10,10))
    plt.contour(X, Y, res, 10)
    plt.xlabel('$x_1$')
    plt.ylabel('$x_2$')
    
show_contours(my_function)
plt.scatter(np.array(var_history)[:,0], np.array(var_history)[:,1], s=1, c='r');
